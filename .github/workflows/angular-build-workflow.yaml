# This workflow will build an angular project
# For more information see: 

on:
  workflow_call:
    inputs:
      PULLREQUEST_FLAG:
        type: boolean
        required: true
        default: true
      TESTCOVERAGE_THRESHOLD:
        type: number
        required: false
        default: 90
      NODE_VERSION:
        type: string
        required: false
        default: '16'

jobs:

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x] 
        # 16.x, 
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup.NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.413'

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0
      with:
          versionSpec: '5.x'

    - name: Determine Version
      id: gitversion # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v0.9

    - name: Setup Variables
      run: |
        echo "ARCHIVE_NAME=${{ github.event.repository.name }}-${{ steps.gitversion.outputs.fullSemVer }}.zip" >> $GITHUB_ENV
        echo "ARCHIVE_NAME CREATED"

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run lint
    - run: npm run build --if-present --configuration production
    - run: npm test

    - name: Install zip
      uses: montudor/action-zip@v1

    - name: Zip output
      run: zip -qq -r ${{ env.ARCHIVE_NAME }} dist node_modules package.json

    - name: Create Draft Release
      if: inputs.PULLREQUEST_FLAG != true
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.gitversion.outputs.fullSemVer }}
        release_name: ${{ env.ARCHIVE_NAME }}
        draft: true
        prerelease: false
  
    - uses: actions/upload-release-asset@v1.0.1
      if: inputs.PULLREQUEST_FLAG != true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ env.ARCHIVE_NAME }}
        asset_name: ${{ env.ARCHIVE_NAME }}
        asset_content_type: application/zip

    - uses: eregon/publish-release@v1
      if: inputs.PULLREQUEST_FLAG != true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}